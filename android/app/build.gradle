plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)

    id 'com.github.node-gradle.node'
    id 'kotlin-kapt'
}

android {
    namespace 'com.sehee.goaltrackerreact'
    compileSdk 34

    defaultConfig {
        applicationId "com.sehee.goaltrackerreact"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    implementation libs.androidx.webkit

    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

}

/**
 * Node plugin configuration
 * https://github.com/node-gradle/gradle-node-plugin/blob/master/docs/usage.md#configuring-the-plugin
 */
node {
    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    nodeProjectDir.set(file("../../web"))
}

/**
 * This task builds the vite project at ../../web folder.
 */
def buildWeb = tasks.register('buildWeb', NpmTask) {
    description = 'Runs vite build'
    args = ['run', 'build']
    doFirst {
        println 'Executing `npm run build` in ../../web'
    }
    dependsOn npmInstall
}

/**
 * Removes the assets generated by the `buildWeb` task.
 */
def cleanWeb = tasks.register('cleanWeb', Delete) {
    description = 'Removes web assets generated by vite'
    delete '../../web/dist'
}

/**
 * This task cleans the Android assets folder.
 * This is necessary because the Android build process does not clean the assets folder.
 */
def cleanAssets = tasks.register('cleanAssets', Delete) {
    description = 'Removes web assets from app module'
    delete 'src/main/assets/dist'
}

/**
 * This task copies the the vite project at `../../web/dist` folder to the Android assets folder.
 */
def copyDistToAssets = tasks.register('copyDistToAssets', Copy) {
    description = 'Copies web assets into app module'
    from '../../web/dist'
    into 'src/main/assets/dist'
    dependsOn buildWeb
    dependsOn cleanAssets
}

/**
 * Hooks tasks into running as part of the app module build.
 */
tasks.named("preBuild") {
    dependsOn copyDistToAssets
}

/**
 * Includes tasks when running a project clean.
 */
tasks.named('clean') {
    dependsOn cleanWeb
    dependsOn cleanAssets
}